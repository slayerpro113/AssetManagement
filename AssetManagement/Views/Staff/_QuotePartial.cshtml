@using AssetManagement.Models
@using Data.Entities
@using Data.Utilities
@using Data.Utilities.Enumeration
@using DevExpress.Web.Internal

@(Html.DevExpress().GridView<QuoteViewModel>(settings =>
    {
        settings.Name = "editQuoteGrid";
        settings.CallbackRouteValues = new { Controller = "Staff", Action = "GetQuotesByPoRequestId", poRequestId = ViewBag.PoRequestId };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Staff", Action = "EditQuote", poRequestId = ViewBag.PoRequestId };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.Width = Unit.Percentage(80);

        settings.SettingsText.CommandBatchEditUpdate = "Update";
        settings.SettingsText.CommandBatchEditCancel = "Cancel";
        settings.SettingsBehavior.AllowFocusedRow = true;
//Custom css header
settings.Styles.Header.BackColor = System.Drawing.ColorTranslator.FromHtml("#f4f4f4");
        settings.Styles.Header.ForeColor = System.Drawing.ColorTranslator.FromHtml("#1AAB9C");

        settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#f2faff");
        settings.Styles.FocusedRow.ForeColor = System.Drawing.Color.Black;

        settings.KeyFieldName = "QuoteID";

        settings.Columns.Add(c =>
        {
            c.Width = 70;
            c.FieldName = "Image";
            c.Caption = "Image";
            c.SetDataItemTemplateContent(p =>
            {
                ViewContext.Writer.Write(
                    "<img src=\"/Image/Categories/" + HttpUtility.UrlDecode(p.Text) + "\" class='avatar' >"
                    );
            });
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "ProductName";
            c.Caption = "Product Name";
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Width = 150;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Brand";
            c.Caption = "Brand";
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Width = 150;
        });


        settings.Columns.Add(c =>
        {
            c.FieldName = "Price";
            c.Caption = "Price";
            c.PropertiesEdit.DisplayFormatString = "c2";
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Width = 150;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Warranty";
            c.Caption = "Warranty (Months)";
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Width = 150;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Vendor";
            c.Caption = "Vendor";
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Width = 150;
        });
    }).Bind(Model).SetEditErrorText(ViewBag.EditError).GetHtml())

