@using AssetManagement.Models
@using Data.Entities
@using Data.Utilities
@using Data.Utilities.Enumeration
@using DevExpress.Web.Internal

@(Html.DevExpress().GridView<QuoteViewModel>(settings =>
{
    settings.Name = "editQuoteGrid";
    settings.CallbackRouteValues = new { Controller = "Staff", Action = "GetQuotesByPoRequestId", poRequestId = ViewBag.PoRequestId };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Staff", Action = "EditQuote", poRequestId = ViewBag.PoRequestId };


    settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
    settings.Width = Unit.Percentage(85);

    settings.SettingsText.CommandBatchEditUpdate = "Update";
    settings.SettingsText.CommandBatchEditCancel = "Cancel";
    settings.SettingsBehavior.AllowFocusedRow = true;
    //Custom css header
    settings.Styles.Header.BackColor = System.Drawing.ColorTranslator.FromHtml("#f4f4f4");
    settings.Styles.Header.ForeColor = System.Drawing.ColorTranslator.FromHtml("#1AAB9C");

    settings.Styles.FocusedRow.BackColor = System.Drawing.ColorTranslator.FromHtml("#f2faff");
    settings.Styles.FocusedRow.ForeColor = System.Drawing.Color.Black;


    settings.Toolbars.Add(toolbar =>
    {
        toolbar.Enabled = true;
        toolbar.Position = GridToolbarPosition.Top;
        toolbar.ItemAlign = GridToolbarItemAlign.Right;
        toolbar.Items.Add(GridViewToolbarCommand.Edit);                   
    });

    settings.KeyFieldName = "QuoteID";

    settings.Columns.Add(c =>
    {
        c.Width = 70;
        c.FieldName = "Image";
        c.Caption = "Image";
        c.SetDataItemTemplateContent(p =>
        {
            ViewContext.Writer.Write(
                "<img src=\"/Image/Categories/" + HttpUtility.UrlDecode(p.Text) + "\" class='avatar' >"
                );
        });
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "ImageBytes";
        c.Caption = "Image";
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.EditorProperties().BinaryImage(p =>
        {
            p.ImageHeight = 120;
            p.ImageWidth = 120;
            p.EnableServerResize = true;
            p.ImageSizeMode = ImageSizeMode.FitProportional;
            p.CallbackRouteValues = new { Action = "BinaryImageColumnPhotoUpdate", Controller = "Staff" };
            p.EditingSettings.Enabled = true;
            p.EditingSettings.UploadSettings.UploadValidationSettings.MaxFileSize = 4194304;
        });
        c.Width = 70;
        c.Visible = false;
    });


    settings.Columns.Add(c =>
    {
        c.FieldName = "ProductName";
        c.Caption = "Product Name";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 180;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "Brand";
        c.Caption = "Brand";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });


    settings.Columns.Add(c =>
    {
        c.FieldName = "PriceString";
        c.Caption = "Price";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "Price";
        c.Caption = "Price";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
        c.Visible = false;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "Warranty";
        c.Caption = "Warranty (Months)";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "Vendor";
        c.Caption = "Vendor";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });

    settings.EditFormLayoutProperties.Items.Add(i =>
    {
        i.ColumnName = "ImageBytes";
        i.RowSpan = 4;
        i.ShowCaption = DefaultBoolean.False;
        i.Width = 120;
    });

    settings.EditFormLayoutProperties.ColCount = 3;
    settings.EditFormLayoutProperties.Items.Add(i => i.ProductName);
    settings.EditFormLayoutProperties.Items.Add(i => i.Vendor);

    settings.EditFormLayoutProperties.Items.Add(i => i.Brand);
    settings.EditFormLayoutProperties.Items.Add(i => i.Price);
    settings.EditFormLayoutProperties.Items.Add(i => i.Warranty);

    settings.EditFormLayoutProperties.Items.AddCommandItem(i =>
    {
        i.ColSpan = 3;
        i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
    });



}).Bind(Model).SetEditErrorText(ViewBag.EditError).GetHtml())

