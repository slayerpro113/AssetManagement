@using AssetManagement.Models
@using Data.Entities
@using Data.Utilities
@using Data.Utilities.Enumeration
@using DevExpress.Web.Internal

@(Html.DevExpress().GridView<ProductViewModel>
      (settings => {
        settings.Name = "grid";
        settings.CallbackRouteValues = new { Controller = "Product", Action = "GetProductByCategoryId", categoryId = ViewBag.CategoryId };
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Product", Action = "AddProduct", categoryId = ViewBag.CategoryId };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Product", Action = "UpdateProduct", categoryId = ViewBag.CategoryId };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Product", Action = "DeleteProduct", categoryId = ViewBag.CategoryId };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.Width = Unit.Percentage(90);

        settings.SettingsText.CommandNew = "New";
        settings.SettingsText.CommandBatchEditUpdate = "Update";
        settings.SettingsText.CommandBatchEditCancel = "Cancel";


        settings.Toolbars.Add(toolbar =>
        {
            toolbar.Enabled = true;
            toolbar.Position = GridToolbarPosition.Top;
            toolbar.ItemAlign = GridToolbarItemAlign.Right;
            toolbar.Items.Add(GridViewToolbarCommand.New);
            toolbar.Items.Add(GridViewToolbarCommand.Edit);
            toolbar.Items.Add(GridViewToolbarCommand.Delete);
        });


        settings.Columns.Add(c =>
        {
            c.FieldName = "ProductName";
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Caption = "Product Name";
            c.Width = 170;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Image";
            c.SetDataItemTemplateContent(p =>
            {
                ViewContext.Writer.Write(
                    "<img src=\"/Image/Categories/" + HttpUtility.UrlDecode(p.Text) + "\" class='product-image' alt='Avatar'>"
                );
            });
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Width = 170;
        });

       settings.Columns.Add(c =>
       {
           c.FieldName = "ImageBytes";
           c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
           c.EditorProperties().BinaryImage(p =>
           {
               p.ImageHeight = 150;
               p.ImageWidth = 160;
               p.EnableServerResize = true;
               p.ImageSizeMode = ImageSizeMode.FitProportional;
               p.CallbackRouteValues = new { Action = "BinaryImageColumnPhotoUpdate", Controller = "Product" };
               p.EditingSettings.Enabled = true;
               p.EditingSettings.UploadSettings.UploadValidationSettings.MaxFileSize = 4194304;
           });
           c.Visible = false;
       });


        settings.Columns.Add(c =>
        {
            c.FieldName = "Description";
            c.Width = 800;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        });

        settings.Columns.Add(c =>
        {
            c.FieldName = "Brand";
            c.Width = 200;
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        });

        settings.KeyFieldName = "ProductID";
        settings.EditFormLayoutProperties.ColCount = 2;

        settings.EditFormLayoutProperties.Items.Add(i =>
        {
            i.ColumnName = "ImageBytes";
            i.RowSpan = 4;
            i.ShowCaption = DefaultBoolean.False;
            i.Width = 160;
        });


        settings.Columns.Add(c =>
        {
            c.FieldName = "NumberUsingProduct";
            c.Caption = "In Use";
            c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
            c.Width = 150;
        });

        settings.EditFormLayoutProperties.Items.Add(i => i.ProductName);
        settings.EditFormLayoutProperties.Items.Add(i => i.Description);
        settings.EditFormLayoutProperties.Items.Add(i => i.Brand);
        settings.EditFormLayoutProperties.Items.AddCommandItem(i =>
        {
            i.ColSpan = 2;
            i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        });

        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Width = Unit.Percentage(100);
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.SettingsPager.PageSize = 3;
}).Bind(Model).SetEditErrorText(ViewBag.EditError).GetHtml())

