
@using System.Drawing
@using Data.Entities
@using Image = System.Web.UI.WebControls.Image
@model IList<Data.Entities.Quote>
@Html.DevExpress().GridView(settings =>{
    settings.Name = "detailGrid";
    settings.SettingsDetail.MasterGridName = "masterGrid";
    //select one row
    //settings.SettingsBehavior.AllowSelectSingleRowOnly = true;

    settings.SettingsBehavior.AllowFocusedRow = false;

    settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.Disabled;

    //Custom css
    settings.Styles.Header.BackColor = System.Drawing.ColorTranslator.FromHtml("#1bc6b5");
    settings.Styles.Header.ForeColor = System.Drawing.ColorTranslator.FromHtml("#1AAB9C");


    settings.CallbackRouteValues = new { Controller = "Manager", Action = "GetQuotesByPoRequestId" , poRequestId = ViewBag.PoRequestId };
    settings.Width = Unit.Percentage(85);

    settings.KeyFieldName = "QuoteID";

    settings.Columns.Add(c =>
    {
        c.Width = 100;
        c.FieldName = "Image";
        c.Caption = "Image";
        c.SetDataItemTemplateContent(p =>
        {
            ViewContext.Writer.Write(
                "<img src=\"/Image/Categories/" + HttpUtility.UrlDecode(p.Text) + "\" class='avatar' >"
                );
        });
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "ProductName";
        c.Caption = "Product Name";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "Brand";
        c.Caption = "Brand";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });


    settings.Columns.Add(c =>
    {
        c.FieldName = "Price";
        c.Caption = "Price";
        c.PropertiesEdit.DisplayFormatString = "c2";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "Warranty";
        c.Caption = "Warranty (Months)";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "Vendor";
        c.Caption = "Vendor";
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        c.Width = 150;
    });


    settings.Columns.Add(c =>
    {
        c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        c.SetDataItemTemplateContent(p =>
        {
            int quoteId = (int)DataBinder.Eval(p.DataItem, "QuoteID");
            var quote = Model.FirstOrDefault(_ => _.QuoteID == quoteId);

            ViewContext.Writer.Write(
                "<button type='button' class='btn btn-round btn-default' " +
                "onclick =\"ApproveQuote(" + quote.PoRequestID + ", " + quoteId + ")\"'>Approve</button>"
                );
        });

        c.Width = 100;
    });

}).Bind(Model).GetHtml()